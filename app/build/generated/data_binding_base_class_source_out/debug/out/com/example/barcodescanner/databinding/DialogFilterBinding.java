// Generated by view binder compiler. Do not edit!
package com.example.barcodescanner.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.barcodescanner.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogFilterBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton btnApply;

  @NonNull
  public final MaterialButton btnCancel;

  @NonNull
  public final TextInputEditText etEndDate;

  @NonNull
  public final TextInputEditText etStartDate;

  @NonNull
  public final TextInputLayout tilEndDate;

  @NonNull
  public final TextInputLayout tilStartDate;

  private DialogFilterBinding(@NonNull LinearLayout rootView, @NonNull MaterialButton btnApply,
      @NonNull MaterialButton btnCancel, @NonNull TextInputEditText etEndDate,
      @NonNull TextInputEditText etStartDate, @NonNull TextInputLayout tilEndDate,
      @NonNull TextInputLayout tilStartDate) {
    this.rootView = rootView;
    this.btnApply = btnApply;
    this.btnCancel = btnCancel;
    this.etEndDate = etEndDate;
    this.etStartDate = etStartDate;
    this.tilEndDate = tilEndDate;
    this.tilStartDate = tilStartDate;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogFilterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogFilterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_filter, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogFilterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnApply;
      MaterialButton btnApply = ViewBindings.findChildViewById(rootView, id);
      if (btnApply == null) {
        break missingId;
      }

      id = R.id.btnCancel;
      MaterialButton btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.etEndDate;
      TextInputEditText etEndDate = ViewBindings.findChildViewById(rootView, id);
      if (etEndDate == null) {
        break missingId;
      }

      id = R.id.etStartDate;
      TextInputEditText etStartDate = ViewBindings.findChildViewById(rootView, id);
      if (etStartDate == null) {
        break missingId;
      }

      id = R.id.tilEndDate;
      TextInputLayout tilEndDate = ViewBindings.findChildViewById(rootView, id);
      if (tilEndDate == null) {
        break missingId;
      }

      id = R.id.tilStartDate;
      TextInputLayout tilStartDate = ViewBindings.findChildViewById(rootView, id);
      if (tilStartDate == null) {
        break missingId;
      }

      return new DialogFilterBinding((LinearLayout) rootView, btnApply, btnCancel, etEndDate,
          etStartDate, tilEndDate, tilStartDate);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

// Generated by view binder compiler. Do not edit!
package com.example.barcodescanner.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.barcodescanner.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogAdvancedFilterBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final MaterialButton btnClearFilter;

  @NonNull
  public final TextInputEditText etBrand;

  @NonNull
  public final TextInputEditText etEndDate;

  @NonNull
  public final TextInputEditText etMaxAmount;

  @NonNull
  public final TextInputEditText etMinAmount;

  @NonNull
  public final AutoCompleteTextView etProductType;

  @NonNull
  public final TextInputEditText etStartDate;

  @NonNull
  public final TextInputLayout tilBrand;

  @NonNull
  public final TextInputLayout tilEndDate;

  @NonNull
  public final TextInputLayout tilMaxAmount;

  @NonNull
  public final TextInputLayout tilMinAmount;

  @NonNull
  public final TextInputLayout tilProductType;

  @NonNull
  public final TextInputLayout tilStartDate;

  private DialogAdvancedFilterBinding(@NonNull ScrollView rootView,
      @NonNull MaterialButton btnClearFilter, @NonNull TextInputEditText etBrand,
      @NonNull TextInputEditText etEndDate, @NonNull TextInputEditText etMaxAmount,
      @NonNull TextInputEditText etMinAmount, @NonNull AutoCompleteTextView etProductType,
      @NonNull TextInputEditText etStartDate, @NonNull TextInputLayout tilBrand,
      @NonNull TextInputLayout tilEndDate, @NonNull TextInputLayout tilMaxAmount,
      @NonNull TextInputLayout tilMinAmount, @NonNull TextInputLayout tilProductType,
      @NonNull TextInputLayout tilStartDate) {
    this.rootView = rootView;
    this.btnClearFilter = btnClearFilter;
    this.etBrand = etBrand;
    this.etEndDate = etEndDate;
    this.etMaxAmount = etMaxAmount;
    this.etMinAmount = etMinAmount;
    this.etProductType = etProductType;
    this.etStartDate = etStartDate;
    this.tilBrand = tilBrand;
    this.tilEndDate = tilEndDate;
    this.tilMaxAmount = tilMaxAmount;
    this.tilMinAmount = tilMinAmount;
    this.tilProductType = tilProductType;
    this.tilStartDate = tilStartDate;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAdvancedFilterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAdvancedFilterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_advanced_filter, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAdvancedFilterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnClearFilter;
      MaterialButton btnClearFilter = ViewBindings.findChildViewById(rootView, id);
      if (btnClearFilter == null) {
        break missingId;
      }

      id = R.id.etBrand;
      TextInputEditText etBrand = ViewBindings.findChildViewById(rootView, id);
      if (etBrand == null) {
        break missingId;
      }

      id = R.id.etEndDate;
      TextInputEditText etEndDate = ViewBindings.findChildViewById(rootView, id);
      if (etEndDate == null) {
        break missingId;
      }

      id = R.id.etMaxAmount;
      TextInputEditText etMaxAmount = ViewBindings.findChildViewById(rootView, id);
      if (etMaxAmount == null) {
        break missingId;
      }

      id = R.id.etMinAmount;
      TextInputEditText etMinAmount = ViewBindings.findChildViewById(rootView, id);
      if (etMinAmount == null) {
        break missingId;
      }

      id = R.id.etProductType;
      AutoCompleteTextView etProductType = ViewBindings.findChildViewById(rootView, id);
      if (etProductType == null) {
        break missingId;
      }

      id = R.id.etStartDate;
      TextInputEditText etStartDate = ViewBindings.findChildViewById(rootView, id);
      if (etStartDate == null) {
        break missingId;
      }

      id = R.id.tilBrand;
      TextInputLayout tilBrand = ViewBindings.findChildViewById(rootView, id);
      if (tilBrand == null) {
        break missingId;
      }

      id = R.id.tilEndDate;
      TextInputLayout tilEndDate = ViewBindings.findChildViewById(rootView, id);
      if (tilEndDate == null) {
        break missingId;
      }

      id = R.id.tilMaxAmount;
      TextInputLayout tilMaxAmount = ViewBindings.findChildViewById(rootView, id);
      if (tilMaxAmount == null) {
        break missingId;
      }

      id = R.id.tilMinAmount;
      TextInputLayout tilMinAmount = ViewBindings.findChildViewById(rootView, id);
      if (tilMinAmount == null) {
        break missingId;
      }

      id = R.id.tilProductType;
      TextInputLayout tilProductType = ViewBindings.findChildViewById(rootView, id);
      if (tilProductType == null) {
        break missingId;
      }

      id = R.id.tilStartDate;
      TextInputLayout tilStartDate = ViewBindings.findChildViewById(rootView, id);
      if (tilStartDate == null) {
        break missingId;
      }

      return new DialogAdvancedFilterBinding((ScrollView) rootView, btnClearFilter, etBrand,
          etEndDate, etMaxAmount, etMinAmount, etProductType, etStartDate, tilBrand, tilEndDate,
          tilMaxAmount, tilMinAmount, tilProductType, tilStartDate);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
